// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Sistema de autenticação interno implementado
model User {
  id String @id @default(uuid())
  name String?
  email String @unique
  username String @unique
  emailVerified DateTime?
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  accounts Account[]
  sessions Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model Categoria {
  id               String     @id
  codigo           String
  nome             String
  tipo             String     // RECEITA ou DESPESA
  ativo            Boolean
  categoriaPaiId   String?    
  categoriaPai     Categoria? @relation("CategoriaPai", fields: [categoriaPaiId], references: [id])
  subcategorias    Categoria[] @relation("CategoriaPai")

  registros        RegistroOrcamento[]

  // opcional: campo para armazenar qual centro de custo pertence
  centroDeCusto    String?
}


model RegistroOrcamento {
  id           String     @id @default(uuid())
  ano          Int
  valor        Decimal    @db.Decimal(14,2)
  categoriaId  String
  categoria    Categoria  @relation(fields: [categoriaId], references: [id])
  criadoEm     DateTime   @default(now())
  atualizadoEm DateTime   @updatedAt
}
